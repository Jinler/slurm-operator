apiVersion: v1
kind: ServiceAccount
metadata:
  name: slurm-resource-daemon
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: slurm-resource-role
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/status"]
    verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: slurm-resource-bind
subjects:
  - kind: ServiceAccount
    name: slurm-resource-daemon
    namespace: default
roleRef:
  kind: ClusterRole
  name: slurm-resource-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: slurm-config
  namespace: default
data:
  config: |
    minikube:
      slurm: 0.tcp.ngrok.io:11737
      resources:
        cpu: 2
      labels:
        infiniband: yes
        cuda: 10.0
        containers: singularity
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: s-resource-daemon
spec:
  selector:
    matchLabels:
      name: s-resource-daemon
  template:
    metadata:
      labels:
        name: s-resource-daemon
    spec:
      serviceAccountName: slurm-resource-daemon
      containers:
      - name: s-resource-daemon
        image: cali4888/rd:0.0.14
        command: ["./main", "--config", "/syslurm/slurm-cfg.yaml"]
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SLURM_CLUSTER_CONFIG
          valueFrom:
           configMapKeyRef:
             name: slurm-config
             key: config
        volumeMounts:
          - name: slurm-cfg
            mountPath: /syslurm
      volumes:
        - name: slurm-cfg
          hostPath:
            path: /var/syslurm
            type: DirectoryOrCreate
      hostNetwork: true
